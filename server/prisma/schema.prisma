// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum ReservationStatus {
  CONFIRMED
  CANCELED
}

model User {
  id       String @id @default(uuid())
  email    String @unique
  fullName String @map("full_name")
  password String
  role     Role   @default(USER)

  events       Event[]
  reservations Reservation[]

  @@map("users")
}

model Event {
  id             String   @id @default(uuid())
  name           String
  description    String?
  eventDate      DateTime @map("event_date")
  location       String?
  onlineLink     String?  @map("online_link")
  maxCapacity    Int      @default(0) @map("max_capacity")
  availableSpots Int      @default(0) @map("available_spots")
  creatorId      String   @map("creator_id")
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  creator      User          @relation(fields: [creatorId], references: [id])
  reservations Reservation[]

  @@map("events")
}

model Reservation {
  id         String            @id @default(uuid())
  eventId    String            @map("event_id")
  userId     String            @map("user_id")
  status     ReservationStatus @default(CONFIRMED)
  reservedAt DateTime          @default(now()) @map("reserved_at")
  updatedAt  DateTime          @updatedAt @map("updated_at")

  event Event @relation(fields: [eventId], references: [id])
  user  User  @relation(fields: [userId], references: [id])

  @@unique([eventId, userId])
  @@map("reservations")
}
